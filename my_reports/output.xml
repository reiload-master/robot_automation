<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.0 on win32)" generated="20210310 23:13:46.818" rpa="false">
<suite id="s1" name="Robot Automation Ui" source="C:\GitHub\robot_automation_ui">
<suite id="s1-s1" name="Features" source="C:\GitHub\robot_automation_ui\features">
<suite id="s1-s1-s1" name="Specifications" source="C:\GitHub\robot_automation_ui\features\specifications">
<suite id="s1-s1-s1-s1" name="Api Application" source="C:\GitHub\robot_automation_ui\features\specifications\api_application">
<suite id="s1-s1-s1-s1-s1" name="Weather Steps Spec" source="C:\GitHub\robot_automation_ui\features\specifications\api_application\weather_steps_spec.robot">
<test id="s1-s1-s1-s1-s1-t1" name="Checking the weather by city">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:47.006" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:47.006" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:47.005" endtime="20210310 23:13:47.006"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.005" endtime="20210310 23:13:47.006"></status>
</kw>
<kw name="When send a request about the city weather" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:47.007" level="INFO">&amp;{params} = { q=São Paulo | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:47.006" endtime="20210310 23:13:47.007"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:47.341" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:47.341" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:47 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '482', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428235,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:13:47.341" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.007" endtime="20210310 23:13:47.341"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.342" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.341" endtime="20210310 23:13:47.342"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.006" endtime="20210310 23:13:47.342"></status>
</kw>
<kw name="Then validating the Response's success data" library="weather_spec">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.342" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428235,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:13:47.342" endtime="20210310 23:13:47.342"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.343" endtime="20210310 23:13:47.343"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.343" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20210310 23:13:47.343" endtime="20210310 23:13:47.343"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()["sys"]}</arg>
<arg>country</arg>
<arg>${COUNTRY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.343" endtime="20210310 23:13:47.344"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>coord</arg>
<arg>${COORDINATES}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.344" endtime="20210310 23:13:47.344"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>name</arg>
<arg>${CITY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.344" endtime="20210310 23:13:47.344"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.344" endtime="20210310 23:13:47.344"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.342" endtime="20210310 23:13:47.344"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_by_city</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:47.005" endtime="20210310 23:13:47.345" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="Checking the weather by id">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:47.346" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:47.346" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:47.346" endtime="20210310 23:13:47.346"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.346" endtime="20210310 23:13:47.346"></status>
</kw>
<kw name="When send a request about the city weather by id" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${ID_CITY}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:47.347" level="INFO">&amp;{params} = { id=3448439 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:47.347" endtime="20210310 23:13:47.347"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:47.622" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?id=3448439&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:47.622" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:47 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '482', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?id=3448439', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428274,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:13:47.622" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.347" endtime="20210310 23:13:47.622"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.623" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.623" endtime="20210310 23:13:47.623"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.346" endtime="20210310 23:13:47.623"></status>
</kw>
<kw name="Then validating the Response's success data" library="weather_spec">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.624" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428274,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:13:47.624" endtime="20210310 23:13:47.624"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.624" endtime="20210310 23:13:47.624"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.625" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20210310 23:13:47.624" endtime="20210310 23:13:47.625"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()["sys"]}</arg>
<arg>country</arg>
<arg>${COUNTRY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.625" endtime="20210310 23:13:47.625"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>coord</arg>
<arg>${COORDINATES}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.625" endtime="20210310 23:13:47.625"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>name</arg>
<arg>${CITY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.625" endtime="20210310 23:13:47.625"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.625" endtime="20210310 23:13:47.626"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.623" endtime="20210310 23:13:47.626"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_by_id</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:47.345" endtime="20210310 23:13:47.626" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t3" name="Checking weather by longitude and latitude">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:47.627" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:47.627" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:47.627" endtime="20210310 23:13:47.627"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.627" endtime="20210310 23:13:47.627"></status>
</kw>
<kw name="When send a request about weather by longitude and latitude" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>lat=${LATITUDE}</arg>
<arg>lon=${LONGITUDE}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:47.628" level="INFO">&amp;{params} = { lat=-23.5475 | lon=-46.6361 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:47.628" endtime="20210310 23:13:47.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Parameters: {params}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.628" level="INFO">Parameters: {params}</msg>
<status status="PASS" starttime="20210310 23:13:47.628" endtime="20210310 23:13:47.628"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:47.935" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:47.935" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:48 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '482', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?lat=-23.55&amp;lon=-46.64', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428273,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:13:47.935" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.629" endtime="20210310 23:13:47.935"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.936" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.935" endtime="20210310 23:13:47.936"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.628" endtime="20210310 23:13:47.936"></status>
</kw>
<kw name="Then validating the Response's success data" library="weather_spec">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.936" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428273,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:13:47.936" endtime="20210310 23:13:47.937"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.937" endtime="20210310 23:13:47.937"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.937" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20210310 23:13:47.937" endtime="20210310 23:13:47.937"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()["sys"]}</arg>
<arg>country</arg>
<arg>${COUNTRY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.937" endtime="20210310 23:13:47.938"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>coord</arg>
<arg>${COORDINATES}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.938" endtime="20210310 23:13:47.938"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>name</arg>
<arg>${CITY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:47.938" endtime="20210310 23:13:47.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
</arguments>
<msg timestamp="20210310 23:13:47.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.938" endtime="20210310 23:13:47.938"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.936" endtime="20210310 23:13:47.939"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_long_lati</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:47.626" endtime="20210310 23:13:47.939" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t4" name="Checking weather by zip code">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:47.940" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:47.940" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:47.940" endtime="20210310 23:13:47.940"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.940" endtime="20210310 23:13:47.940"></status>
</kw>
<kw name="When send a request about weather by zip code us" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zip=${ZIP_CODE_US}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:47.941" level="INFO">&amp;{params} = { zip=94040,us | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:47.941" endtime="20210310 23:13:47.941"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:48.250" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?zip=94040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?zip=94040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:48.250" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?zip=94040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:48 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '477', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?zip=94040%2cus', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-122.088,"lat":37.3855},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"base":"stations","main":{"temp":282.1,"feels_like":277.62,"temp_min":278.71,"temp_max":284.15,"pressure":1014,"humidity":54},"visibility":10000,"wind":{"speed":3.6,"deg":260},"clouds":{"all":90},"dt":1615428275,"sys":{"type":1,"id":5122,"country":"US","sunrise":1615386381,"sunset":1615428654},"timezone":-28800,"id":0,"name":"Mountain View","cod":200} 
 </msg>
<msg timestamp="20210310 23:13:48.250" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:47.941" endtime="20210310 23:13:48.250"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:48.251" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:48.251" endtime="20210310 23:13:48.251"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:47.941" endtime="20210310 23:13:48.251"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:48.252" level="INFO">Response: {"coord":{"lon":-122.088,"lat":37.3855},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"base":"stations","main":{"temp":282.1,"feels_like":277.62,"temp_min":278.71,"temp_max":284.15,"pressure":1014,"humidity":54},"visibility":10000,"wind":{"speed":3.6,"deg":260},"clouds":{"all":90},"dt":1615428275,"sys":{"type":1,"id":5122,"country":"US","sunrise":1615386381,"sunset":1615428654},"timezone":-28800,"id":0,"name":"Mountain View","cod":200}</msg>
<status status="PASS" starttime="20210310 23:13:48.252" endtime="20210310 23:13:48.252"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:48.252" endtime="20210310 23:13:48.252"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:13:48.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:48.252" endtime="20210310 23:13:48.253"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:48.251" endtime="20210310 23:13:48.253"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_zipcod</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:47.939" endtime="20210310 23:13:48.253" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t5" name="Checking weather by not found zip code">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:48.254" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:48.254" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:48.254" endtime="20210310 23:13:48.254"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:48.254" endtime="20210310 23:13:48.254"></status>
</kw>
<kw name="When send a request about weather by zip code wrong" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zip=${ZIP_CODE_FAIL}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:48.255" level="INFO">&amp;{params} = { zip=040,us | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:48.255" endtime="20210310 23:13:48.255"></status>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<arg>expected_status=any</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:48.544" level="INFO">POST Request : url=http://api.openweathermap.org/data/2.5/weather?zip=040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?zip=040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:48.544" level="INFO">POST Response : url=http://api.openweathermap.org/data/2.5/weather?zip=040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=404, reason=Not Found 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:48 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '40', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?zip=040%2cus', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"cod":"404","message":"city not found"} 
 </msg>
<msg timestamp="20210310 23:13:48.544" level="INFO">${RESPONSE} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:48.255" endtime="20210310 23:13:48.544"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:48.545" level="INFO">${RESPONSE} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:48.544" endtime="20210310 23:13:48.545"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:48.255" endtime="20210310 23:13:48.545"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>404</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:48.546" level="INFO">Response: {"cod":"404","message":"city not found"}</msg>
<status status="PASS" starttime="20210310 23:13:48.546" endtime="20210310 23:13:48.546"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:48.546" endtime="20210310 23:13:48.546"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:13:48.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:48.546" endtime="20210310 23:13:48.547"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:48.545" endtime="20210310 23:13:48.547"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_zipcode_fail</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:48.253" endtime="20210310 23:13:48.547" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t6" name="Checking cities within a rectangle zone">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:48.548" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:48.548" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:48.548" endtime="20210310 23:13:48.548"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:48.548" endtime="20210310 23:13:48.549"></status>
</kw>
<kw name="When send a request about cities within a rectangle zone" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>bbox=${BBOX}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:48.549" level="INFO">&amp;{params} = { bbox=12,32,15,37,10 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:48.549" endtime="20210310 23:13:48.549"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${CITY_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:48.832" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/box/city?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/box/city?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:48.832" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/box/city?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:49 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '5830', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/box/city?bbox=12%2C32%2C15%2C37%2C10', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"cod":200,"calctime":0.0031045,"cnt":15,"list":[{"id":2563191,"dt":1615424969,"name":"Birkirkara","coord":{"Lon":14.4611,"Lat":35.8972},"main":{"temp":11.87,"feels_like":8.03,"temp_min":11,"temp_max":12.78,"pressure":1018,"humidity":82},"visibility":10000,"wind":{"speed":5.14,"deg":320},"rain":null,"snow":null,"clouds":{"today":20},"weather":[{"id":801,"main":"Clouds","description":"few clouds","icon":"02n"}]},{"id":2210247,"dt":1615424966,"name":"Tripoli","coord":{"Lon":13.1875,"Lat":32.8752},"main":{"temp":14.35,"feels_like":9.73,"temp_min":14.35,"temp_max":14.35,"pressure":1021,"sea_level":1021,"grnd_level":1018,"humidity":66},"visibility":10000,"wind":{"speed":5.97,"deg":0},"rain":null,"snow":null,"clouds":{"today":4},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2216885,"dt":1615424966,"name":"Zawiya","coord":{"Lon":12.7278,"Lat":32.7522},"main":{"temp":14.48,"feels_like":10.16,"temp_min":14.48,"temp_max":14.48,"pressure":1021,"sea_level":1021,"grnd_level":1018,"humidity":66},"visibility":10000,"wind":{"speed":5.58,"deg":15},"rain":null,"snow":null,"clouds":{"today":59},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2212771,"dt":1615424966,"name":"Şabrātah","coord":{"Lon":12.4885,"Lat":32.7933},"main":{"temp":14.42,"feels_like":10.05,"temp_min":14.42,"temp_max":14.42,"pressure":1021,"sea_level":1021,"grnd_level":1019,"humidity":65},"visibility":10000,"wind":{"speed":5.55,"deg":19},"rain":null,"snow":null,"clouds":{"today":80},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2215163,"dt":1615424966,"name":"Masallātah","coord":{"Lon":14,"Lat":32.6167},"main":{"temp":12.5,"feels_like":7.46,"temp_min":12.5,"temp_max":12.5,"pressure":1020,"sea_level":1020,"grnd_level":993,"humidity":78},"visibility":10000,"wind":{"speed":6.8,"deg":341},"rain":null,"snow":null,"clouds":{"today":54},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2219905,"dt":1615424967,"name":"Al Khums","coord":{"Lon":14.2619,"Lat":32.6486},"main":{"temp":14.4,"feels_like":9.3,"temp_min":14.4,"temp_max":14.4,"pressure":1020,"sea_level":1020,"grnd_level":1018,"humidity":74},"visibility":10000,"wind":{"speed":7.28,"deg":340},"rain":null,"snow":null,"clouds":{"today":70},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2208425,"dt":1615424966,"name":"Zuwārah","coord":{"Lon":12.082,"Lat":32.9312},"main":{"temp":14.43,"feels_like":9.65,"temp_min":14.43,"temp_max":14.43,"pressure":1021,"sea_level":1021,"grnd_level":1021,"humidity":67},"visibility":10000,"wind":{"speed":6.29,"deg":22},"rain":null,"snow":null,"clouds":{"today":65},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2210221,"dt":1615424966,"name":"Tarhuna","coord":{"Lon":13.6332,"Lat":32.435},"main":{"temp":10.48,"feels_like":6.38,"temp_min":10.48,"temp_max":10.48,"pressure":1020,"sea_level":1020,"grnd_level":974,"humidity":85},"visibility":10000,"wind":{"speed":5.22,"deg":347},"rain":null,"snow":null,"clouds":{"today":46},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},{"id":2208485,"dt":1615424966,"name":"Zliten","coord":{"Lon":14.5687,"Lat":32.4674},"main":{"temp":14.55,"feels_like":9.71,"temp_min":14.55,"temp_max":14.55,"pressure":1020,"sea_level":1020,"grnd_level":1019,"humidity":75},"visibility":10000,"wind":{"speed":7.05,"deg":340},"rain":null,"snow":null,"clouds":{"today":87},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2217362,"dt":1615424967,"name":"Gharyan","coord":{"Lon":13.0203,"Lat":32.1722},"main":{"temp":9.14,"feels_like":4.97,"temp_min":9.14,"temp_max":9.14,"pressure":1020,"sea_level":1020,"grnd_level":939,"humidity":89},"visibility":10000,"wind":{"speed":5.1,"deg":11},"rain":null,"snow":null,"clouds":{"today":89},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2523693,"dt":1615424924,"name":"Pozzallo","coord":{"Lon":14.8499,"Lat":36.7305},"main":{"temp":6,"feels_like":2.88,"temp_min":6,"temp_max":6,"pressure":1018,"humidity":87},"visibility":10000,"wind":{"speed":2.57,"deg":60},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2524119,"dt":1615424923,"name":"Modica","coord":{"Lon":14.774,"Lat":36.8459},"main":{"temp":6,"feels_like":2.88,"temp_min":6,"temp_max":6,"pressure":1018,"humidity":87},"visibility":10000,"wind":{"speed":2.57,"deg":60},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2208791,"dt":1615424966,"name":"Yafran","coord":{"Lon":12.5286,"Lat":32.0633},"main":{"temp":9.3,"feels_like":4.9,"temp_min":9.3,"temp_max":9.3,"pressure":1020,"sea_level":1020,"grnd_level":941,"humidity":88},"visibility":10000,"wind":{"speed":5.43,"deg":22},"rain":null,"snow":null,"clouds":{"today":100},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2523581,"dt":1615424923,"name":"Rosolini","coord":{"Lon":14.9478,"Lat":36.8242},"main":{"temp":6,"feels_like":2.88,"temp_min":6,"temp_max":6,"pressure":1018,"humidity":87},"visibility":10000,"wind":{"speed":2.57,"deg":60},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2523650,"dt":1615424925,"name":"Ragusa","coord":{"Lon":14.7172,"Lat":36.9282},"main":{"temp":6,"feels_like":2.88,"temp_min":6,"temp_max":6,"pressure":1018,"humidity":87},"visibility":10000,"wind":{"speed":2.57,"deg":60},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]}]} 
 </msg>
<msg timestamp="20210310 23:13:48.833" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:48.549" endtime="20210310 23:13:48.833"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:48.833" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:48.833" endtime="20210310 23:13:48.833"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:48.549" endtime="20210310 23:13:48.833"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:48.834" level="INFO">Response: {"cod":200,"calctime":0.0031045,"cnt":15,"list":[{"id":2563191,"dt":1615424969,"name":"Birkirkara","coord":{"Lon":14.4611,"Lat":35.8972},"main":{"temp":11.87,"feels_like":8.03,"temp_min":11,"temp_max":12.78,"pressure":1018,"humidity":82},"visibility":10000,"wind":{"speed":5.14,"deg":320},"rain":null,"snow":null,"clouds":{"today":20},"weather":[{"id":801,"main":"Clouds","description":"few clouds","icon":"02n"}]},{"id":2210247,"dt":1615424966,"name":"Tripoli","coord":{"Lon":13.1875,"Lat":32.8752},"main":{"temp":14.35,"feels_like":9.73,"temp_min":14.35,"temp_max":14.35,"pressure":1021,"sea_level":1021,"grnd_level":1018,"humidity":66},"visibility":10000,"wind":{"speed":5.97,"deg":0},"rain":null,"snow":null,"clouds":{"today":4},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2216885,"dt":1615424966,"name":"Zawiya","coord":{"Lon":12.7278,"Lat":32.7522},"main":{"temp":14.48,"feels_like":10.16,"temp_min":14.48,"temp_max":14.48,"pressure":1021,"sea_level":1021,"grnd_level":1018,"humidity":66},"visibility":10000,"wind":{"speed":5.58,"deg":15},"rain":null,"snow":null,"clouds":{"today":59},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2212771,"dt":1615424966,"name":"Şabrātah","coord":{"Lon":12.4885,"Lat":32.7933},"main":{"temp":14.42,"feels_like":10.05,"temp_min":14.42,"temp_max":14.42,"pressure":1021,"sea_level":1021,"grnd_level":1019,"humidity":65},"visibility":10000,"wind":{"speed":5.55,"deg":19},"rain":null,"snow":null,"clouds":{"today":80},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2215163,"dt":1615424966,"name":"Masallātah","coord":{"Lon":14,"Lat":32.6167},"main":{"temp":12.5,"feels_like":7.46,"temp_min":12.5,"temp_max":12.5,"pressure":1020,"sea_level":1020,"grnd_level":993,"humidity":78},"visibility":10000,"wind":{"speed":6.8,"deg":341},"rain":null,"snow":null,"clouds":{"today":54},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2219905,"dt":1615424967,"name":"Al Khums","coord":{"Lon":14.2619,"Lat":32.6486},"main":{"temp":14.4,"feels_like":9.3,"temp_min":14.4,"temp_max":14.4,"pressure":1020,"sea_level":1020,"grnd_level":1018,"humidity":74},"visibility":10000,"wind":{"speed":7.28,"deg":340},"rain":null,"snow":null,"clouds":{"today":70},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2208425,"dt":1615424966,"name":"Zuwārah","coord":{"Lon":12.082,"Lat":32.9312},"main":{"temp":14.43,"feels_like":9.65,"temp_min":14.43,"temp_max":14.43,"pressure":1021,"sea_level":1021,"grnd_level":1021,"humidity":67},"visibility":10000,"wind":{"speed":6.29,"deg":22},"rain":null,"snow":null,"clouds":{"today":65},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2210221,"dt":1615424966,"name":"Tarhuna","coord":{"Lon":13.6332,"Lat":32.435},"main":{"temp":10.48,"feels_like":6.38,"temp_min":10.48,"temp_max":10.48,"pressure":1020,"sea_level":1020,"grnd_level":974,"humidity":85},"visibility":10000,"wind":{"speed":5.22,"deg":347},"rain":null,"snow":null,"clouds":{"today":46},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},{"id":2208485,"dt":1615424966,"name":"Zliten","coord":{"Lon":14.5687,"Lat":32.4674},"main":{"temp":14.55,"feels_like":9.71,"temp_min":14.55,"temp_max":14.55,"pressure":1020,"sea_level":1020,"grnd_level":1019,"humidity":75},"visibility":10000,"wind":{"speed":7.05,"deg":340},"rain":null,"snow":null,"clouds":{"today":87},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2217362,"dt":1615424967,"name":"Gharyan","coord":{"Lon":13.0203,"Lat":32.1722},"main":{"temp":9.14,"feels_like":4.97,"temp_min":9.14,"temp_max":9.14,"pressure":1020,"sea_level":1020,"grnd_level":939,"humidity":89},"visibility":10000,"wind":{"speed":5.1,"deg":11},"rain":null,"snow":null,"clouds":{"today":89},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2523693,"dt":1615424924,"name":"Pozzallo","coord":{"Lon":14.8499,"Lat":36.7305},"main":{"temp":6,"feels_like":2.88,"temp_min":6,"temp_max":6,"pressure":1018,"humidity":87},"visibility":10000,"wind":{"speed":2.57,"deg":60},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2524119,"dt":1615424923,"name":"Modica","coord":{"Lon":14.774,"Lat":36.8459},"main":{"temp":6,"feels_like":2.88,"temp_min":6,"temp_max":6,"pressure":1018,"humidity":87},"visibility":10000,"wind":{"speed":2.57,"deg":60},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2208791,"dt":1615424966,"name":"Yafran","coord":{"Lon":12.5286,"Lat":32.0633},"main":{"temp":9.3,"feels_like":4.9,"temp_min":9.3,"temp_max":9.3,"pressure":1020,"sea_level":1020,"grnd_level":941,"humidity":88},"visibility":10000,"wind":{"speed":5.43,"deg":22},"rain":null,"snow":null,"clouds":{"today":100},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2523581,"dt":1615424923,"name":"Rosolini","coord":{"Lon":14.9478,"Lat":36.8242},"main":{"temp":6,"feels_like":2.88,"temp_min":6,"temp_max":6,"pressure":1018,"humidity":87},"visibility":10000,"wind":{"speed":2.57,"deg":60},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2523650,"dt":1615424925,"name":"Ragusa","coord":{"Lon":14.7172,"Lat":36.9282},"main":{"temp":6,"feels_like":2.88,"temp_min":6,"temp_max":6,"pressure":1018,"humidity":87},"visibility":10000,"wind":{"speed":2.57,"deg":60},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]}]}</msg>
<status status="PASS" starttime="20210310 23:13:48.834" endtime="20210310 23:13:48.834"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:48.834" endtime="20210310 23:13:48.835"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:13:48.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:48.835" endtime="20210310 23:13:48.835"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:48.834" endtime="20210310 23:13:48.835"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_rectangle_zone</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:48.547" endtime="20210310 23:13:48.836" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t7" name="Checking cities in circle">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:48.837" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:48.837" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:48.837" endtime="20210310 23:13:48.837"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:48.836" endtime="20210310 23:13:48.837"></status>
</kw>
<kw name="When send a request about weather by cities in circle" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>lat=${LATITUDE}</arg>
<arg>lon=${LONGITUDE}</arg>
<arg>cnt=${CNT}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:48.838" level="INFO">&amp;{params} = { lat=-23.5475 | lon=-46.6361 | cnt=10 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:48.838" endtime="20210310 23:13:48.838"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:49.158" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;cnt=10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;cnt=10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:49.158" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;cnt=10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:49 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '482', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?cnt=10&amp;lat=-23.55&amp;lon=-46.64', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428235,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:13:49.159" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:48.838" endtime="20210310 23:13:49.159"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:49.159" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:49.159" endtime="20210310 23:13:49.159"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:48.837" endtime="20210310 23:13:49.159"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:49.160" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428235,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:13:49.160" endtime="20210310 23:13:49.160"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:49.160" endtime="20210310 23:13:49.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:13:49.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:49.160" endtime="20210310 23:13:49.161"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:49.159" endtime="20210310 23:13:49.161"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>cities_circle</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:48.836" endtime="20210310 23:13:49.161" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t8" name="Checking multilingual support">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:49.162" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:49.162" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:49.162" endtime="20210310 23:13:49.163"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:49.162" endtime="20210310 23:13:49.163"></status>
</kw>
<kw name="When send a request about multilingual support" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${ID_CITY}</arg>
<arg>lang=${LANGUAGE}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:49.163" level="INFO">&amp;{params} = { id=3448439 | lang=sp | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:49.163" endtime="20210310 23:13:49.163"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:49.479" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;lang=sp&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?id=3448439&amp;lang=sp&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:49.479" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;lang=sp&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:49 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '472', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?id=3448439&amp;lang=sp', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"nubes","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428274,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:13:49.480" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:49.163" endtime="20210310 23:13:49.480"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:49.480" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:49.480" endtime="20210310 23:13:49.480"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:49.163" endtime="20210310 23:13:49.480"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:49.481" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"nubes","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428274,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:13:49.481" endtime="20210310 23:13:49.481"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:49.481" endtime="20210310 23:13:49.481"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:13:49.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:49.481" endtime="20210310 23:13:49.482"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:49.480" endtime="20210310 23:13:49.482"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>multilingual</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:49.161" endtime="20210310 23:13:49.482" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t9" name="Checking Call back function">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:49.483" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:49.483" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:49.483" endtime="20210310 23:13:49.483"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:49.483" endtime="20210310 23:13:49.483"></status>
</kw>
<kw name="When send a request about call back support" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>callback=test</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:49.484" level="INFO">&amp;{params} = { q=São Paulo | callback=test | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:49.484" endtime="20210310 23:13:49.484"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:49.799" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:49.799" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:50 GMT', 'Content-Type': 'text/plain; charset=utf-8', 'Content-Length': '488', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?callback=test&amp;q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body=test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.44,"feels_like":294.14,"temp_min":293.15,"temp_max":293.71,"pressure":1015,"humidity":83},"visibility":9000,"wind":{"speed":2.57,"deg":130},"clouds":{"all":90},"dt":1615427986,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}) 
 </msg>
<msg timestamp="20210310 23:13:49.799" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:49.484" endtime="20210310 23:13:49.799"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:49.800" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:49.800" endtime="20210310 23:13:49.800"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:49.484" endtime="20210310 23:13:49.800"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:49.801" level="INFO">Response: test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.44,"feels_like":294.14,"temp_min":293.15,"temp_max":293.71,"pressure":1015,"humidity":83},"visibility":9000,"wind":{"speed":2.57,"deg":130},"clouds":{"all":90},"dt":1615427986,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200})</msg>
<status status="PASS" starttime="20210310 23:13:49.801" endtime="20210310 23:13:49.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:49.801" endtime="20210310 23:13:49.801"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:13:49.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:49.801" endtime="20210310 23:13:49.802"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:49.800" endtime="20210310 23:13:49.802"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>call_back</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:49.482" endtime="20210310 23:13:49.802" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t10" name="Checking Units of measurement - For temperature in Fahrenheit use units=imperial">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:49.804" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:49.804" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:49.803" endtime="20210310 23:13:49.804"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:49.803" endtime="20210310 23:13:49.804"></status>
</kw>
<kw name="When send a request about Units of measurement" library="weather_spec">
<arguments>
<arg>imperial</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>units=${UNITS}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:49.805" level="INFO">&amp;{params} = { q=São Paulo | units=imperial | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:49.804" endtime="20210310 23:13:49.805"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:50.104" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=imperial&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=imperial&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:50.104" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=imperial&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '475', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo&amp;units=imperial', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":68.97,"feels_like":68.99,"temp_min":68,"temp_max":69.8,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":5.75,"deg":110},"clouds":{"all":90},"dt":1615428273,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:13:50.104" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:49.805" endtime="20210310 23:13:50.104"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:50.105" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:50.104" endtime="20210310 23:13:50.105"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:49.804" endtime="20210310 23:13:50.105"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:50.105" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":68.97,"feels_like":68.99,"temp_min":68,"temp_max":69.8,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":5.75,"deg":110},"clouds":{"all":90},"dt":1615428273,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:13:50.105" endtime="20210310 23:13:50.106"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:50.106" endtime="20210310 23:13:50.106"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:13:50.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:50.106" endtime="20210310 23:13:50.106"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:50.105" endtime="20210310 23:13:50.106"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>units_imperial</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:49.802" endtime="20210310 23:13:50.107" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t11" name="Checking Units of measurement - For temperature in Celsius use units=metric">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:50.108" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:50.108" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:50.108" endtime="20210310 23:13:50.109"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:50.108" endtime="20210310 23:13:50.109"></status>
</kw>
<kw name="When send a request about Units of measurement" library="weather_spec">
<arguments>
<arg>metric</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>units=${UNITS}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:50.109" level="INFO">&amp;{params} = { q=São Paulo | units=metric | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:50.109" endtime="20210310 23:13:50.109"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:50.421" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=metric&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=metric&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:50.421" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=metric&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '473', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo&amp;units=metric', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":20.54,"feels_like":20.55,"temp_min":20,"temp_max":21,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428273,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:13:50.421" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:50.109" endtime="20210310 23:13:50.421"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:50.421" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:50.421" endtime="20210310 23:13:50.421"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:50.109" endtime="20210310 23:13:50.421"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:50.422" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":20.54,"feels_like":20.55,"temp_min":20,"temp_max":21,"pressure":1015,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":110},"clouds":{"all":90},"dt":1615428273,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:13:50.422" endtime="20210310 23:13:50.422"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:50.422" endtime="20210310 23:13:50.422"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:13:50.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:50.422" endtime="20210310 23:13:50.423"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:50.421" endtime="20210310 23:13:50.423"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>units_metric</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:50.107" endtime="20210310 23:13:50.423" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t12" name="Checking Units of measurement - For temperature in Kelvin use units=standard">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:50.424" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:50.424" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:50.424" endtime="20210310 23:13:50.424"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:50.424" endtime="20210310 23:13:50.424"></status>
</kw>
<kw name="When send a request about Units of measurement" library="weather_spec">
<arguments>
<arg>standard</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>units=${UNITS}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:50.425" level="INFO">&amp;{params} = { q=São Paulo | units=standard | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:13:50.425" endtime="20210310 23:13:50.425"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:50.748" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=standard&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=standard&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:50.748" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=standard&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '482', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo&amp;units=standard', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.44,"feels_like":294.14,"temp_min":293.15,"temp_max":293.71,"pressure":1015,"humidity":83},"visibility":9000,"wind":{"speed":2.57,"deg":130},"clouds":{"all":90},"dt":1615427986,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:13:50.748" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:50.425" endtime="20210310 23:13:50.748"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:50.749" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:50.748" endtime="20210310 23:13:50.749"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:50.425" endtime="20210310 23:13:50.749"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:13:50.750" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.44,"feels_like":294.14,"temp_min":293.15,"temp_max":293.71,"pressure":1015,"humidity":83},"visibility":9000,"wind":{"speed":2.57,"deg":130},"clouds":{"all":90},"dt":1615427986,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:13:50.750" endtime="20210310 23:13:50.750"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:50.750" endtime="20210310 23:13:50.751"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:13:50.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:13:50.751" endtime="20210310 23:13:50.751"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:50.749" endtime="20210310 23:13:50.751"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>units_standard</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:50.423" endtime="20210310 23:13:50.751" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t13" name="Search weather data by city name with invalid api key">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:13:50.753" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:13:50.753" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:13:50.752" endtime="20210310 23:13:50.753"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:50.752" endtime="20210310 23:13:50.753"></status>
</kw>
<kw name="When send a request within invalid api key" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>appid=${API_KEY_INCORRETA}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:13:50.754" level="INFO">&amp;{params} = { q=São Paulo | appid=e2f1d841cc16cff49a0aa18b531d71e0x }</msg>
<status status="PASS" starttime="20210310 23:13:50.753" endtime="20210310 23:13:50.754"></status>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<arg>expected_status=any</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:13:51.052" level="INFO">POST Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0x 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0x 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:13:51.052" level="INFO">POST Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0x 
 status=401, reason=Unauthorized 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:13:51 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '107', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."} 
 </msg>
<msg timestamp="20210310 23:13:51.052" level="INFO">${RESPONSE} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:50.754" endtime="20210310 23:13:51.052"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:13:51.053" level="INFO">${RESPONSE} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20210310 23:13:51.052" endtime="20210310 23:13:51.053"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:50.753" endtime="20210310 23:13:51.053"></status>
</kw>
<kw name="Then validate error message for invalid api key" library="weather_spec">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>message</arg>
<arg>${MSN_INVALID_KEY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:13:51.053" endtime="20210310 23:13:51.054"></status>
</kw>
<status status="PASS" starttime="20210310 23:13:51.053" endtime="20210310 23:13:51.054"></status>
</kw>
<tags>
<tag>api_key_invalid</tag>
<tag>api_tests</tag>
</tags>
<status status="PASS" starttime="20210310 23:13:50.752" endtime="20210310 23:13:51.054" critical="yes"></status>
</test>
<status status="PASS" starttime="20210310 23:13:46.839" endtime="20210310 23:13:51.055"></status>
</suite>
<status status="PASS" starttime="20210310 23:13:46.837" endtime="20210310 23:13:51.058"></status>
</suite>
<status status="PASS" starttime="20210310 23:13:46.836" endtime="20210310 23:13:51.060"></status>
</suite>
<status status="PASS" starttime="20210310 23:13:46.834" endtime="20210310 23:13:51.062"></status>
</suite>
<status status="PASS" starttime="20210310 23:13:46.819" endtime="20210310 23:13:51.063"></status>
</suite>
<statistics>
<total>
<stat pass="13" fail="0">Critical Tests</stat>
<stat pass="13" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">api_key_invalid</stat>
<stat pass="13" fail="0">api_tests</stat>
<stat pass="1" fail="0">call_back</stat>
<stat pass="1" fail="0">cities_circle</stat>
<stat pass="1" fail="0">multilingual</stat>
<stat pass="1" fail="0">units_imperial</stat>
<stat pass="1" fail="0">units_metric</stat>
<stat pass="1" fail="0">units_standard</stat>
<stat pass="1" fail="0">weather_by_city</stat>
<stat pass="1" fail="0">weather_by_id</stat>
<stat pass="1" fail="0">weather_long_lati</stat>
<stat pass="1" fail="0">weather_rectangle_zone</stat>
<stat pass="1" fail="0">weather_zipcod</stat>
<stat pass="1" fail="0">weather_zipcode_fail</stat>
</tag>
<suite>
<stat pass="13" fail="0" id="s1" name="Robot Automation Ui">Robot Automation Ui</stat>
<stat pass="13" fail="0" id="s1-s1" name="Features">Robot Automation Ui.Features</stat>
<stat pass="13" fail="0" id="s1-s1-s1" name="Specifications">Robot Automation Ui.Features.Specifications</stat>
<stat pass="13" fail="0" id="s1-s1-s1-s1" name="Api Application">Robot Automation Ui.Features.Specifications.Api Application</stat>
<stat pass="13" fail="0" id="s1-s1-s1-s1-s1" name="Weather Steps Spec">Robot Automation Ui.Features.Specifications.Api Application.Weather Steps Spec</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
