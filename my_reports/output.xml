<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.0 on win32)" generated="20210310 23:25:46.577" rpa="false">
<suite id="s1" name="Robot Automation Ui" source="C:\GitHub\robot_automation_ui">
<suite id="s1-s1" name="Features" source="C:\GitHub\robot_automation_ui\features">
<suite id="s1-s1-s1" name="Specifications" source="C:\GitHub\robot_automation_ui\features\specifications">
<suite id="s1-s1-s1-s1" name="Api Application" source="C:\GitHub\robot_automation_ui\features\specifications\api_application">
<suite id="s1-s1-s1-s1-s1" name="Weather Steps Spec" source="C:\GitHub\robot_automation_ui\features\specifications\api_application\weather_steps_spec.robot">
<test id="s1-s1-s1-s1-s1-t1" name="Checking the weather by city">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:46.770" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:46.770" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:46.770" endtime="20210310 23:25:46.770"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:46.770" endtime="20210310 23:25:46.771"></status>
</kw>
<kw name="When send a request about the city weather" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:46.771" level="INFO">&amp;{params} = { q=São Paulo | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:46.771" endtime="20210310 23:25:46.771"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:47.286" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:47.286" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:47 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '481', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429547,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:25:47.286" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:46.771" endtime="20210310 23:25:47.286"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:47.286" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:47.286" endtime="20210310 23:25:47.286"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:46.771" endtime="20210310 23:25:47.286"></status>
</kw>
<kw name="Then validating the Response's success data" library="weather_spec">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:47.287" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429547,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:25:47.287" endtime="20210310 23:25:47.287"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:47.287" endtime="20210310 23:25:47.288"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20210310 23:25:47.288" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20210310 23:25:47.288" endtime="20210310 23:25:47.288"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()["sys"]}</arg>
<arg>country</arg>
<arg>${COUNTRY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:47.288" endtime="20210310 23:25:47.288"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>coord</arg>
<arg>${COORDINATES}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:47.288" endtime="20210310 23:25:47.289"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>name</arg>
<arg>${CITY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:47.289" endtime="20210310 23:25:47.289"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
</arguments>
<msg timestamp="20210310 23:25:47.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:47.289" endtime="20210310 23:25:47.289"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:47.287" endtime="20210310 23:25:47.289"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_by_city</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:46.769" endtime="20210310 23:25:47.290" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="Checking the weather by id">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:47.291" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:47.291" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:47.291" endtime="20210310 23:25:47.291"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:47.290" endtime="20210310 23:25:47.291"></status>
</kw>
<kw name="When send a request about the city weather by id" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${ID_CITY}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:47.292" level="INFO">&amp;{params} = { id=3448439 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:47.292" endtime="20210310 23:25:47.292"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:47.726" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?id=3448439&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:47.727" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:47 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '481', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?id=3448439', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429428,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:25:47.727" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:47.292" endtime="20210310 23:25:47.727"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:47.727" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:47.727" endtime="20210310 23:25:47.727"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:47.291" endtime="20210310 23:25:47.727"></status>
</kw>
<kw name="Then validating the Response's success data" library="weather_spec">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:47.728" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429428,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:25:47.728" endtime="20210310 23:25:47.728"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:47.728" endtime="20210310 23:25:47.729"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20210310 23:25:47.729" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20210310 23:25:47.729" endtime="20210310 23:25:47.729"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()["sys"]}</arg>
<arg>country</arg>
<arg>${COUNTRY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:47.729" endtime="20210310 23:25:47.729"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>coord</arg>
<arg>${COORDINATES}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:47.729" endtime="20210310 23:25:47.729"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>name</arg>
<arg>${CITY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:47.730" endtime="20210310 23:25:47.730"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
</arguments>
<msg timestamp="20210310 23:25:47.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:47.730" endtime="20210310 23:25:47.730"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:47.728" endtime="20210310 23:25:47.730"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_by_id</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:47.290" endtime="20210310 23:25:47.731" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t3" name="Checking weather by longitude and latitude">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:47.733" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:47.733" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:47.733" endtime="20210310 23:25:47.733"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:47.733" endtime="20210310 23:25:47.733"></status>
</kw>
<kw name="When send a request about weather by longitude and latitude" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>lat=${LATITUDE}</arg>
<arg>lon=${LONGITUDE}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:47.734" level="INFO">&amp;{params} = { lat=-23.5475 | lon=-46.6361 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:47.734" endtime="20210310 23:25:47.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Parameters: {params}</arg>
</arguments>
<msg timestamp="20210310 23:25:47.734" level="INFO">Parameters: {params}</msg>
<status status="PASS" starttime="20210310 23:25:47.734" endtime="20210310 23:25:47.734"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:48.165" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:48.165" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:48 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '482', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?lat=-23.55&amp;lon=-46.64', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6388,"lat":-23.5489},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":120},"clouds":{"all":90},"dt":1615428972,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367179,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:25:48.165" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:47.735" endtime="20210310 23:25:48.165"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:48.165" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:48.165" endtime="20210310 23:25:48.166"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:47.734" endtime="20210310 23:25:48.166"></status>
</kw>
<kw name="Then validating the Response's success data" library="weather_spec">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:48.166" level="INFO">Response: {"coord":{"lon":-46.6388,"lat":-23.5489},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.69,"feels_like":293.7,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":120},"clouds":{"all":90},"dt":1615428972,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367179,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:25:48.166" endtime="20210310 23:25:48.166"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:48.166" endtime="20210310 23:25:48.167"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20210310 23:25:48.167" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20210310 23:25:48.167" endtime="20210310 23:25:48.167"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()["sys"]}</arg>
<arg>country</arg>
<arg>${COUNTRY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:48.167" endtime="20210310 23:25:48.168"></status>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>coord</arg>
<arg>${COORDINATES}</arg>
</arguments>
<msg timestamp="20210310 23:25:48.168" level="FAIL">Value of dictionary key 'coord' does not match: {'lon': -46.6388, 'lat': -23.5489} != {'lon': -46.6361, 'lat': -23.5475}</msg>
<msg timestamp="20210310 23:25:48.168" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20210310 23:25:48.168" endtime="20210310 23:25:48.168"></status>
</kw>
<status status="FAIL" starttime="20210310 23:25:48.166" endtime="20210310 23:25:48.168"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_long_lati</tag>
</tags>
<status status="FAIL" starttime="20210310 23:25:47.732" endtime="20210310 23:25:48.168" critical="yes">Value of dictionary key 'coord' does not match: {'lon': -46.6388, 'lat': -23.5489} != {'lon': -46.6361, 'lat': -23.5475}</status>
</test>
<test id="s1-s1-s1-s1-s1-t4" name="Checking weather by zip code">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:48.170" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:48.170" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:48.170" endtime="20210310 23:25:48.170"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:48.169" endtime="20210310 23:25:48.170"></status>
</kw>
<kw name="When send a request about weather by zip code us" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zip=${ZIP_CODE_US}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:48.171" level="INFO">&amp;{params} = { zip=94040,us | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:48.170" endtime="20210310 23:25:48.171"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:48.651" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?zip=94040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?zip=94040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:48.651" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?zip=94040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:48 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '478', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?zip=94040%2cus', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-122.088,"lat":37.3855},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":281.8,"feels_like":277.93,"temp_min":278.71,"temp_max":283.15,"pressure":1014,"humidity":62},"visibility":10000,"wind":{"speed":3.09,"deg":260},"clouds":{"all":90},"dt":1615429548,"sys":{"type":1,"id":5122,"country":"US","sunrise":1615386381,"sunset":1615428654},"timezone":-28800,"id":0,"name":"Mountain View","cod":200} 
 </msg>
<msg timestamp="20210310 23:25:48.651" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:48.171" endtime="20210310 23:25:48.651"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:48.652" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:48.652" endtime="20210310 23:25:48.652"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:48.170" endtime="20210310 23:25:48.652"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:48.653" level="INFO">Response: {"coord":{"lon":-122.088,"lat":37.3855},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":281.8,"feels_like":277.93,"temp_min":278.71,"temp_max":283.15,"pressure":1014,"humidity":62},"visibility":10000,"wind":{"speed":3.09,"deg":260},"clouds":{"all":90},"dt":1615429548,"sys":{"type":1,"id":5122,"country":"US","sunrise":1615386381,"sunset":1615428654},"timezone":-28800,"id":0,"name":"Mountain View","cod":200}</msg>
<status status="PASS" starttime="20210310 23:25:48.653" endtime="20210310 23:25:48.653"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:48.653" endtime="20210310 23:25:48.653"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:25:48.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:48.654" endtime="20210310 23:25:48.654"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:48.653" endtime="20210310 23:25:48.654"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_zipcod</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:48.169" endtime="20210310 23:25:48.654" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t5" name="Checking weather by not found zip code">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:48.656" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:48.656" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:48.655" endtime="20210310 23:25:48.656"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:48.655" endtime="20210310 23:25:48.656"></status>
</kw>
<kw name="When send a request about weather by zip code wrong" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zip=${ZIP_CODE_FAIL}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:48.656" level="INFO">&amp;{params} = { zip=040,us | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:48.656" endtime="20210310 23:25:48.657"></status>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<arg>expected_status=any</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:49.068" level="INFO">POST Request : url=http://api.openweathermap.org/data/2.5/weather?zip=040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?zip=040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:49.068" level="INFO">POST Response : url=http://api.openweathermap.org/data/2.5/weather?zip=040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=404, reason=Not Found 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:49 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '40', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?zip=040%2cus', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"cod":"404","message":"city not found"} 
 </msg>
<msg timestamp="20210310 23:25:49.068" level="INFO">${RESPONSE} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:48.657" endtime="20210310 23:25:49.068"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:49.069" level="INFO">${RESPONSE} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:49.068" endtime="20210310 23:25:49.069"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:48.656" endtime="20210310 23:25:49.069"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>404</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:49.070" level="INFO">Response: {"cod":"404","message":"city not found"}</msg>
<status status="PASS" starttime="20210310 23:25:49.070" endtime="20210310 23:25:49.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:49.070" endtime="20210310 23:25:49.070"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:25:49.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:49.070" endtime="20210310 23:25:49.070"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:49.069" endtime="20210310 23:25:49.071"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_zipcode_fail</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:48.655" endtime="20210310 23:25:49.071" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t6" name="Checking cities within a rectangle zone">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:49.072" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:49.072" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:49.072" endtime="20210310 23:25:49.072"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:49.072" endtime="20210310 23:25:49.072"></status>
</kw>
<kw name="When send a request about cities within a rectangle zone" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>bbox=${BBOX}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:49.073" level="INFO">&amp;{params} = { bbox=12,32,15,37,10 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:49.073" endtime="20210310 23:25:49.073"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${CITY_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:49.534" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/box/city?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/box/city?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:49.534" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/box/city?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:49 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '5843', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/box/city?bbox=12%2C32%2C15%2C37%2C10', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"cod":200,"calctime":0.001662508,"cnt":15,"list":[{"id":2563191,"dt":1615428565,"name":"Birkirkara","coord":{"Lon":14.4611,"Lat":35.8972},"main":{"temp":11.55,"feels_like":6.28,"temp_min":11,"temp_max":12.22,"pressure":1019,"humidity":76},"visibility":10000,"wind":{"speed":6.69,"deg":320},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2210247,"dt":1615428563,"name":"Tripoli","coord":{"Lon":13.1875,"Lat":32.8752},"main":{"temp":14.27,"feels_like":9.66,"temp_min":14.27,"temp_max":14.27,"pressure":1021,"sea_level":1021,"grnd_level":1018,"humidity":65},"visibility":10000,"wind":{"speed":5.85,"deg":358},"rain":null,"snow":null,"clouds":{"today":42},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},{"id":2216885,"dt":1615428563,"name":"Zawiya","coord":{"Lon":12.7278,"Lat":32.7522},"main":{"temp":14.37,"feels_like":10,"temp_min":14.37,"temp_max":14.37,"pressure":1021,"sea_level":1021,"grnd_level":1018,"humidity":65},"visibility":10000,"wind":{"speed":5.54,"deg":15},"rain":null,"snow":null,"clouds":{"today":79},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2212771,"dt":1615428563,"name":"Şabrātah","coord":{"Lon":12.4885,"Lat":32.7933},"main":{"temp":14.28,"feels_like":9.66,"temp_min":14.28,"temp_max":14.28,"pressure":1021,"sea_level":1021,"grnd_level":1019,"humidity":64},"visibility":10000,"wind":{"speed":5.79,"deg":19},"rain":null,"snow":null,"clouds":{"today":81},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2215163,"dt":1615428563,"name":"Masallātah","coord":{"Lon":14,"Lat":32.6167},"main":{"temp":12.44,"feels_like":7.19,"temp_min":12.44,"temp_max":12.44,"pressure":1020,"sea_level":1020,"grnd_level":993,"humidity":74},"visibility":10000,"wind":{"speed":6.81,"deg":341},"rain":null,"snow":null,"clouds":{"today":66},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2219905,"dt":1615428563,"name":"Al Khums","coord":{"Lon":14.2619,"Lat":32.6486},"main":{"temp":14.29,"feels_like":9.09,"temp_min":14.29,"temp_max":14.29,"pressure":1020,"sea_level":1020,"grnd_level":1018,"humidity":71},"visibility":10000,"wind":{"speed":7.16,"deg":340},"rain":null,"snow":null,"clouds":{"today":84},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2208425,"dt":1615428563,"name":"Zuwārah","coord":{"Lon":12.082,"Lat":32.9312},"main":{"temp":14.31,"feels_like":9.1,"temp_min":14.31,"temp_max":14.31,"pressure":1021,"sea_level":1021,"grnd_level":1021,"humidity":65},"visibility":10000,"wind":{"speed":6.72,"deg":13},"rain":null,"snow":null,"clouds":{"today":61},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2210221,"dt":1615428563,"name":"Tarhuna","coord":{"Lon":13.6332,"Lat":32.435},"main":{"temp":10.54,"feels_like":5.87,"temp_min":10.54,"temp_max":10.54,"pressure":1020,"sea_level":1020,"grnd_level":974,"humidity":80},"visibility":10000,"wind":{"speed":5.75,"deg":351},"rain":null,"snow":null,"clouds":{"today":71},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2208485,"dt":1615428563,"name":"Zliten","coord":{"Lon":14.5687,"Lat":32.4674},"main":{"temp":14.45,"feels_like":9.47,"temp_min":14.45,"temp_max":14.45,"pressure":1020,"sea_level":1020,"grnd_level":1019,"humidity":73},"visibility":10000,"wind":{"speed":7.05,"deg":340},"rain":null,"snow":null,"clouds":{"today":74},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2217362,"dt":1615428563,"name":"Gharyan","coord":{"Lon":13.0203,"Lat":32.1722},"main":{"temp":8.95,"feels_like":3.85,"temp_min":8.95,"temp_max":8.95,"pressure":1020,"sea_level":1020,"grnd_level":939,"humidity":87},"visibility":10000,"wind":{"speed":6.26,"deg":13},"rain":null,"snow":null,"clouds":{"today":95},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2523693,"dt":1615428520,"name":"Pozzallo","coord":{"Lon":14.8499,"Lat":36.7305},"main":{"temp":4,"feels_like":0.69,"temp_min":4,"temp_max":4,"pressure":1018,"humidity":93},"visibility":10000,"wind":{"speed":2.57,"deg":50},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2524119,"dt":1615428520,"name":"Modica","coord":{"Lon":14.774,"Lat":36.8459},"main":{"temp":4,"feels_like":0.69,"temp_min":4,"temp_max":4,"pressure":1018,"humidity":93},"visibility":10000,"wind":{"speed":2.57,"deg":50},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2208791,"dt":1615428563,"name":"Yafran","coord":{"Lon":12.5286,"Lat":32.0633},"main":{"temp":9.03,"feels_like":4.11,"temp_min":9.03,"temp_max":9.03,"pressure":1020,"sea_level":1020,"grnd_level":941,"humidity":86},"visibility":10000,"wind":{"speed":5.97,"deg":26},"rain":null,"snow":null,"clouds":{"today":100},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2523581,"dt":1615428520,"name":"Rosolini","coord":{"Lon":14.9478,"Lat":36.8242},"main":{"temp":4,"feels_like":0.69,"temp_min":4,"temp_max":4,"pressure":1018,"humidity":93},"visibility":10000,"wind":{"speed":2.57,"deg":50},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2523650,"dt":1615428521,"name":"Ragusa","coord":{"Lon":14.7172,"Lat":36.9282},"main":{"temp":4,"feels_like":0.69,"temp_min":4,"temp_max":4,"pressure":1018,"humidity":93},"visibility":10000,"wind":{"speed":2.57,"deg":50},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]}]} 
 </msg>
<msg timestamp="20210310 23:25:49.535" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:49.073" endtime="20210310 23:25:49.535"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:49.535" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:49.535" endtime="20210310 23:25:49.535"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:49.073" endtime="20210310 23:25:49.535"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:49.536" level="INFO">Response: {"cod":200,"calctime":0.001662508,"cnt":15,"list":[{"id":2563191,"dt":1615428565,"name":"Birkirkara","coord":{"Lon":14.4611,"Lat":35.8972},"main":{"temp":11.55,"feels_like":6.28,"temp_min":11,"temp_max":12.22,"pressure":1019,"humidity":76},"visibility":10000,"wind":{"speed":6.69,"deg":320},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2210247,"dt":1615428563,"name":"Tripoli","coord":{"Lon":13.1875,"Lat":32.8752},"main":{"temp":14.27,"feels_like":9.66,"temp_min":14.27,"temp_max":14.27,"pressure":1021,"sea_level":1021,"grnd_level":1018,"humidity":65},"visibility":10000,"wind":{"speed":5.85,"deg":358},"rain":null,"snow":null,"clouds":{"today":42},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},{"id":2216885,"dt":1615428563,"name":"Zawiya","coord":{"Lon":12.7278,"Lat":32.7522},"main":{"temp":14.37,"feels_like":10,"temp_min":14.37,"temp_max":14.37,"pressure":1021,"sea_level":1021,"grnd_level":1018,"humidity":65},"visibility":10000,"wind":{"speed":5.54,"deg":15},"rain":null,"snow":null,"clouds":{"today":79},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2212771,"dt":1615428563,"name":"Şabrātah","coord":{"Lon":12.4885,"Lat":32.7933},"main":{"temp":14.28,"feels_like":9.66,"temp_min":14.28,"temp_max":14.28,"pressure":1021,"sea_level":1021,"grnd_level":1019,"humidity":64},"visibility":10000,"wind":{"speed":5.79,"deg":19},"rain":null,"snow":null,"clouds":{"today":81},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2215163,"dt":1615428563,"name":"Masallātah","coord":{"Lon":14,"Lat":32.6167},"main":{"temp":12.44,"feels_like":7.19,"temp_min":12.44,"temp_max":12.44,"pressure":1020,"sea_level":1020,"grnd_level":993,"humidity":74},"visibility":10000,"wind":{"speed":6.81,"deg":341},"rain":null,"snow":null,"clouds":{"today":66},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2219905,"dt":1615428563,"name":"Al Khums","coord":{"Lon":14.2619,"Lat":32.6486},"main":{"temp":14.29,"feels_like":9.09,"temp_min":14.29,"temp_max":14.29,"pressure":1020,"sea_level":1020,"grnd_level":1018,"humidity":71},"visibility":10000,"wind":{"speed":7.16,"deg":340},"rain":null,"snow":null,"clouds":{"today":84},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2208425,"dt":1615428563,"name":"Zuwārah","coord":{"Lon":12.082,"Lat":32.9312},"main":{"temp":14.31,"feels_like":9.1,"temp_min":14.31,"temp_max":14.31,"pressure":1021,"sea_level":1021,"grnd_level":1021,"humidity":65},"visibility":10000,"wind":{"speed":6.72,"deg":13},"rain":null,"snow":null,"clouds":{"today":61},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2210221,"dt":1615428563,"name":"Tarhuna","coord":{"Lon":13.6332,"Lat":32.435},"main":{"temp":10.54,"feels_like":5.87,"temp_min":10.54,"temp_max":10.54,"pressure":1020,"sea_level":1020,"grnd_level":974,"humidity":80},"visibility":10000,"wind":{"speed":5.75,"deg":351},"rain":null,"snow":null,"clouds":{"today":71},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2208485,"dt":1615428563,"name":"Zliten","coord":{"Lon":14.5687,"Lat":32.4674},"main":{"temp":14.45,"feels_like":9.47,"temp_min":14.45,"temp_max":14.45,"pressure":1020,"sea_level":1020,"grnd_level":1019,"humidity":73},"visibility":10000,"wind":{"speed":7.05,"deg":340},"rain":null,"snow":null,"clouds":{"today":74},"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}]},{"id":2217362,"dt":1615428563,"name":"Gharyan","coord":{"Lon":13.0203,"Lat":32.1722},"main":{"temp":8.95,"feels_like":3.85,"temp_min":8.95,"temp_max":8.95,"pressure":1020,"sea_level":1020,"grnd_level":939,"humidity":87},"visibility":10000,"wind":{"speed":6.26,"deg":13},"rain":null,"snow":null,"clouds":{"today":95},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2523693,"dt":1615428520,"name":"Pozzallo","coord":{"Lon":14.8499,"Lat":36.7305},"main":{"temp":4,"feels_like":0.69,"temp_min":4,"temp_max":4,"pressure":1018,"humidity":93},"visibility":10000,"wind":{"speed":2.57,"deg":50},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2524119,"dt":1615428520,"name":"Modica","coord":{"Lon":14.774,"Lat":36.8459},"main":{"temp":4,"feels_like":0.69,"temp_min":4,"temp_max":4,"pressure":1018,"humidity":93},"visibility":10000,"wind":{"speed":2.57,"deg":50},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2208791,"dt":1615428563,"name":"Yafran","coord":{"Lon":12.5286,"Lat":32.0633},"main":{"temp":9.03,"feels_like":4.11,"temp_min":9.03,"temp_max":9.03,"pressure":1020,"sea_level":1020,"grnd_level":941,"humidity":86},"visibility":10000,"wind":{"speed":5.97,"deg":26},"rain":null,"snow":null,"clouds":{"today":100},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}]},{"id":2523581,"dt":1615428520,"name":"Rosolini","coord":{"Lon":14.9478,"Lat":36.8242},"main":{"temp":4,"feels_like":0.69,"temp_min":4,"temp_max":4,"pressure":1018,"humidity":93},"visibility":10000,"wind":{"speed":2.57,"deg":50},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]},{"id":2523650,"dt":1615428521,"name":"Ragusa","coord":{"Lon":14.7172,"Lat":36.9282},"main":{"temp":4,"feels_like":0.69,"temp_min":4,"temp_max":4,"pressure":1018,"humidity":93},"visibility":10000,"wind":{"speed":2.57,"deg":50},"rain":null,"snow":null,"clouds":{"today":0},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01n"}]}]}</msg>
<status status="PASS" starttime="20210310 23:25:49.536" endtime="20210310 23:25:49.536"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:49.536" endtime="20210310 23:25:49.537"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:25:49.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:49.537" endtime="20210310 23:25:49.537"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:49.535" endtime="20210310 23:25:49.537"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>weather_rectangle_zone</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:49.071" endtime="20210310 23:25:49.538" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t7" name="Checking cities in circle">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:49.539" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:49.539" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:49.539" endtime="20210310 23:25:49.539"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:49.538" endtime="20210310 23:25:49.539"></status>
</kw>
<kw name="When send a request about weather by cities in circle" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>lat=${LATITUDE}</arg>
<arg>lon=${LONGITUDE}</arg>
<arg>cnt=${CNT}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:49.540" level="INFO">&amp;{params} = { lat=-23.5475 | lon=-46.6361 | cnt=10 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:49.540" endtime="20210310 23:25:49.540"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:49.946" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;cnt=10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;cnt=10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:49.946" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;cnt=10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '481', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?cnt=10&amp;lat=-23.55&amp;lon=-46.64', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429547,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:25:49.946" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:49.540" endtime="20210310 23:25:49.946"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:49.946" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:49.946" endtime="20210310 23:25:49.946"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:49.539" endtime="20210310 23:25:49.946"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:49.947" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429547,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:25:49.947" endtime="20210310 23:25:49.947"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:49.947" endtime="20210310 23:25:49.948"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:25:49.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:49.948" endtime="20210310 23:25:49.948"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:49.947" endtime="20210310 23:25:49.948"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>cities_circle</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:49.538" endtime="20210310 23:25:49.948" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t8" name="Checking multilingual support">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:49.950" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:49.950" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:49.949" endtime="20210310 23:25:49.950"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:49.949" endtime="20210310 23:25:49.950"></status>
</kw>
<kw name="When send a request about multilingual support" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${ID_CITY}</arg>
<arg>lang=${LANGUAGE}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:49.951" level="INFO">&amp;{params} = { id=3448439 | lang=sp | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:49.950" endtime="20210310 23:25:49.951"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:50.387" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;lang=sp&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?id=3448439&amp;lang=sp&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:50.387" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;lang=sp&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '471', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?id=3448439&amp;lang=sp', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"nubes","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429547,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:25:50.388" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:49.951" endtime="20210310 23:25:50.388"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:50.388" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:50.388" endtime="20210310 23:25:50.388"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:49.950" endtime="20210310 23:25:50.388"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:50.389" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"nubes","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429547,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:25:50.389" endtime="20210310 23:25:50.389"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:50.389" endtime="20210310 23:25:50.389"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:25:50.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:50.389" endtime="20210310 23:25:50.390"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:50.388" endtime="20210310 23:25:50.390"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>multilingual</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:49.949" endtime="20210310 23:25:50.390" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t9" name="Checking Call back function">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:50.391" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:50.391" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:50.391" endtime="20210310 23:25:50.391"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:50.391" endtime="20210310 23:25:50.391"></status>
</kw>
<kw name="When send a request about call back support" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>callback=test</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:50.392" level="INFO">&amp;{params} = { q=São Paulo | callback=test | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:50.392" endtime="20210310 23:25:50.392"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:50.806" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:50.806" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:51 GMT', 'Content-Type': 'text/plain; charset=utf-8', 'Content-Length': '489', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?callback=test&amp;q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body=test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.68,"feels_like":293.69,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":120},"clouds":{"all":90},"dt":1615429358,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}) 
 </msg>
<msg timestamp="20210310 23:25:50.806" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:50.392" endtime="20210310 23:25:50.806"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:50.807" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:50.807" endtime="20210310 23:25:50.807"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:50.392" endtime="20210310 23:25:50.807"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:50.808" level="INFO">Response: test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.68,"feels_like":293.69,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":73},"visibility":10000,"wind":{"speed":2.57,"deg":120},"clouds":{"all":90},"dt":1615429358,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200})</msg>
<status status="PASS" starttime="20210310 23:25:50.808" endtime="20210310 23:25:50.808"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:50.808" endtime="20210310 23:25:50.808"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:25:50.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:50.808" endtime="20210310 23:25:50.809"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:50.807" endtime="20210310 23:25:50.809"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>call_back</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:50.390" endtime="20210310 23:25:50.809" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t10" name="Checking Units of measurement - For temperature in Fahrenheit use units=imperial">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:50.811" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:50.811" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:50.810" endtime="20210310 23:25:50.811"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:50.810" endtime="20210310 23:25:50.811"></status>
</kw>
<kw name="When send a request about Units of measurement" library="weather_spec">
<arguments>
<arg>imperial</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>units=${UNITS}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:50.812" level="INFO">&amp;{params} = { q=São Paulo | units=imperial | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:50.811" endtime="20210310 23:25:50.812"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:51.227" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=imperial&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=imperial&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:51.227" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=imperial&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:51 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '475', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo&amp;units=imperial', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":68.95,"feels_like":68.97,"temp_min":68,"temp_max":69.8,"pressure":1014,"humidity":73},"visibility":10000,"wind":{"speed":5.75,"deg":120},"clouds":{"all":90},"dt":1615429330,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:25:51.227" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:50.812" endtime="20210310 23:25:51.227"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:51.228" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:51.227" endtime="20210310 23:25:51.228"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:50.811" endtime="20210310 23:25:51.228"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:51.229" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":68.95,"feels_like":68.97,"temp_min":68,"temp_max":69.8,"pressure":1014,"humidity":73},"visibility":10000,"wind":{"speed":5.75,"deg":120},"clouds":{"all":90},"dt":1615429330,"sys":{"type":1,"id":8446,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:25:51.228" endtime="20210310 23:25:51.229"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:51.229" endtime="20210310 23:25:51.229"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:25:51.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:51.229" endtime="20210310 23:25:51.229"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:51.228" endtime="20210310 23:25:51.229"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>units_imperial</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:50.809" endtime="20210310 23:25:51.230" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t11" name="Checking Units of measurement - For temperature in Celsius use units=metric">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:51.231" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:51.231" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:51.231" endtime="20210310 23:25:51.231"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:51.230" endtime="20210310 23:25:51.231"></status>
</kw>
<kw name="When send a request about Units of measurement" library="weather_spec">
<arguments>
<arg>metric</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>units=${UNITS}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:51.232" level="INFO">&amp;{params} = { q=São Paulo | units=metric | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:51.232" endtime="20210310 23:25:51.232"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:51.635" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=metric&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=metric&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:51.635" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=metric&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:51 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '471', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo&amp;units=metric', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":20.64,"feels_like":20.36,"temp_min":20,"temp_max":21,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429476,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:25:51.635" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:51.232" endtime="20210310 23:25:51.635"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:51.636" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:51.635" endtime="20210310 23:25:51.636"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:51.231" endtime="20210310 23:25:51.636"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:51.637" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":20.64,"feels_like":20.36,"temp_min":20,"temp_max":21,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429476,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:25:51.636" endtime="20210310 23:25:51.637"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:51.637" endtime="20210310 23:25:51.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:25:51.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:51.637" endtime="20210310 23:25:51.637"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:51.636" endtime="20210310 23:25:51.637"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>units_metric</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:51.230" endtime="20210310 23:25:51.638" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t12" name="Checking Units of measurement - For temperature in Kelvin use units=standard">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:51.639" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:51.639" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:51.639" endtime="20210310 23:25:51.639"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:51.638" endtime="20210310 23:25:51.639"></status>
</kw>
<kw name="When send a request about Units of measurement" library="weather_spec">
<arguments>
<arg>standard</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>units=${UNITS}</arg>
<arg>appid=${API_KEY}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:51.640" level="INFO">&amp;{params} = { q=São Paulo | units=standard | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20210310 23:25:51.640" endtime="20210310 23:25:51.640"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:52.056" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=standard&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=standard&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:52.057" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;units=standard&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '481', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo&amp;units=standard', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429457,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200} 
 </msg>
<msg timestamp="20210310 23:25:52.057" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:51.640" endtime="20210310 23:25:52.057"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:52.057" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:52.057" endtime="20210310 23:25:52.057"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:51.639" endtime="20210310 23:25:52.057"></status>
</kw>
<kw name="Then expect API response will be code" library="weather_spec">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<msg timestamp="20210310 23:25:52.058" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"base":"stations","main":{"temp":293.79,"feels_like":293.51,"temp_min":293.15,"temp_max":294.15,"pressure":1014,"humidity":78},"visibility":10000,"wind":{"speed":3.6,"deg":80},"clouds":{"all":90},"dt":1615429457,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1615367178,"sunset":1615411647},"timezone":-10800,"id":3448439,"name":"São Paulo","cod":200}</msg>
<status status="PASS" starttime="20210310 23:25:52.058" endtime="20210310 23:25:52.058"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Response: ${RESPONSE.text}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:52.058" endtime="20210310 23:25:52.058"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
</arguments>
<msg timestamp="20210310 23:25:52.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210310 23:25:52.059" endtime="20210310 23:25:52.059"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:52.058" endtime="20210310 23:25:52.059"></status>
</kw>
<tags>
<tag>api_tests</tag>
<tag>units_standard</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:51.638" endtime="20210310 23:25:52.059" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t13" name="Search weather data by city name with invalid api key">
<kw name="Given I start the session" library="weather_spec">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
</arguments>
<msg timestamp="20210310 23:25:52.060" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20210310 23:25:52.060" level="DEBUG">Creating session: weather</msg>
<status status="PASS" starttime="20210310 23:25:52.060" endtime="20210310 23:25:52.060"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:52.060" endtime="20210310 23:25:52.060"></status>
</kw>
<kw name="When send a request within invalid api key" library="weather_spec">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>q=${city}</arg>
<arg>appid=${API_KEY_INCORRETA}</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20210310 23:25:52.061" level="INFO">&amp;{params} = { q=São Paulo | appid=e2f1d841cc16cff49a0aa18b531d71e0x }</msg>
<status status="PASS" starttime="20210310 23:25:52.061" endtime="20210310 23:25:52.061"></status>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<arg>expected_status=any</arg>
</arguments>
<assign>
<var>${RESPONSE}</var>
</assign>
<msg timestamp="20210310 23:25:52.491" level="INFO">POST Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0x 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0x 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20210310 23:25:52.491" level="INFO">POST Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0x 
 status=401, reason=Unauthorized 
 headers={'Server': 'openresty', 'Date': 'Thu, 11 Mar 2021 02:25:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '107', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."} 
 </msg>
<msg timestamp="20210310 23:25:52.491" level="INFO">${RESPONSE} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:52.061" endtime="20210310 23:25:52.491"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPONSE}</arg>
</arguments>
<msg timestamp="20210310 23:25:52.492" level="INFO">${RESPONSE} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20210310 23:25:52.492" endtime="20210310 23:25:52.492"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:52.061" endtime="20210310 23:25:52.492"></status>
</kw>
<kw name="Then validate error message for invalid api key" library="weather_spec">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPONSE.json()}</arg>
<arg>message</arg>
<arg>${MSN_INVALID_KEY}</arg>
</arguments>
<status status="PASS" starttime="20210310 23:25:52.493" endtime="20210310 23:25:52.493"></status>
</kw>
<status status="PASS" starttime="20210310 23:25:52.492" endtime="20210310 23:25:52.493"></status>
</kw>
<tags>
<tag>api_key_invalid</tag>
<tag>api_tests</tag>
</tags>
<status status="PASS" starttime="20210310 23:25:52.059" endtime="20210310 23:25:52.493" critical="yes"></status>
</test>
<status status="FAIL" starttime="20210310 23:25:46.598" endtime="20210310 23:25:52.494"></status>
</suite>
<status status="FAIL" starttime="20210310 23:25:46.596" endtime="20210310 23:25:52.497"></status>
</suite>
<status status="FAIL" starttime="20210310 23:25:46.594" endtime="20210310 23:25:52.499"></status>
</suite>
<status status="FAIL" starttime="20210310 23:25:46.593" endtime="20210310 23:25:52.501"></status>
</suite>
<status status="FAIL" starttime="20210310 23:25:46.578" endtime="20210310 23:25:52.504"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="1">Critical Tests</stat>
<stat pass="12" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">api_key_invalid</stat>
<stat pass="12" fail="1">api_tests</stat>
<stat pass="1" fail="0">call_back</stat>
<stat pass="1" fail="0">cities_circle</stat>
<stat pass="1" fail="0">multilingual</stat>
<stat pass="1" fail="0">units_imperial</stat>
<stat pass="1" fail="0">units_metric</stat>
<stat pass="1" fail="0">units_standard</stat>
<stat pass="1" fail="0">weather_by_city</stat>
<stat pass="1" fail="0">weather_by_id</stat>
<stat pass="0" fail="1">weather_long_lati</stat>
<stat pass="1" fail="0">weather_rectangle_zone</stat>
<stat pass="1" fail="0">weather_zipcod</stat>
<stat pass="1" fail="0">weather_zipcode_fail</stat>
</tag>
<suite>
<stat pass="12" fail="1" id="s1" name="Robot Automation Ui">Robot Automation Ui</stat>
<stat pass="12" fail="1" id="s1-s1" name="Features">Robot Automation Ui.Features</stat>
<stat pass="12" fail="1" id="s1-s1-s1" name="Specifications">Robot Automation Ui.Features.Specifications</stat>
<stat pass="12" fail="1" id="s1-s1-s1-s1" name="Api Application">Robot Automation Ui.Features.Specifications.Api Application</stat>
<stat pass="12" fail="1" id="s1-s1-s1-s1-s1" name="Weather Steps Spec">Robot Automation Ui.Features.Specifications.Api Application.Weather Steps Spec</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
